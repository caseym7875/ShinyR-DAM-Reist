"0","binning <- function(df){"
"0","  activity_per_condition <- df"
"0","  act_profile_window <- 30"
"0","  data_recording_frequency <- 1"
"0","  "
"0","  # Calculating vectors of average values over X min non overlapping windows"
"0","  mean_of_activity_per_condition_30_min <- rollapply(activity_per_condition$mean, width = as.numeric(act_profile_window)/as.numeric(data_recording_frequency), by = as.numeric(act_profile_window)/as.numeric(data_recording_frequency), FUN = mean)"
"0","  "
"0","  sem_of_activity_per_condition_30_min <- rollapply(activity_per_condition$SEM, width = as.numeric(act_profile_window)/as.numeric(data_recording_frequency), by = as.numeric(act_profile_window)/as.numeric(data_recording_frequency), FUN = mean)"
"0","  "
"0","  activity_per_condition_1 <- {"
"0","    d <- data.frame(activity_per_condition, "
"0","                    binned_mean = round(rep(mean_of_activity_per_condition_30_min, each=as.numeric(act_profile_window)/as.numeric(data_recording_frequency)), 10),"
"0","                    binned_sem = round(rep(sem_of_activity_per_condition_30_min, each=as.numeric(act_profile_window)/as.numeric(data_recording_frequency))), 10)"
"0","    d"
"0","  }"
"0","  "
"0","  # Sampling the data frame for every Xth row"
"0","  activity_30min_mean_2 <- activity_per_condition_1[seq(1, nrow(activity_per_condition_1), by = as.numeric(act_profile_window)/as.numeric(data_recording_frequency)),]"
"0","  "
"0","  #Drops unnecessary columns containing not averaged mean and SEM data"
"0","  activity_30min_mean <- select(activity_30min_mean_2, Dec_time, Dec_ZT_time, Condition, binned_mean, binned_sem)"
"0","  "
"0","  return(activity_30min_mean)"
"0","}"
